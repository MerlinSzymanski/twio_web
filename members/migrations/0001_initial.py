# Generated by Django 3.0.3 on 2020-09-04 11:19

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Event-name')),
                ('place', models.CharField(blank=True, default='Leipzig', max_length=200, verbose_name='Veranstaltungsort')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('deadline', models.DateTimeField(default=datetime.datetime(2020, 9, 4, 13, 19, 49, 56423), verbose_name='Anmeldung/Abmeldung bis')),
                ('start_date', models.DateTimeField(default=datetime.datetime(2020, 9, 4, 13, 19, 49, 56444), verbose_name='Datum Beginn')),
                ('end_date', models.DateTimeField(default=datetime.datetime(2020, 9, 4, 13, 19, 49, 56457), verbose_name='Datum Ende')),
                ('hinweis', models.CharField(blank=True, max_length=50, verbose_name='Hinweis')),
                ('costs', models.IntegerField(blank=True, null=True, verbose_name='Kosten')),
                ('info_only', models.BooleanField(null=True, verbose_name='Nur Ankündigung?')),
                ('teilnahmebedingungen', models.FileField(blank=True, null=True, upload_to='Events/Docs/', verbose_name='Teilnahmebedingungen')),
                ('datenschutz', models.FileField(blank=True, null=True, upload_to='Events/Docs/', verbose_name='Datenschutzerklärung')),
                ('einverstaendnis', models.FileField(blank=True, null=True, upload_to='Events/Docs/', verbose_name='Einverständnis')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=10, verbose_name="Gruppe (z.B 'A')")),
            ],
        ),
        migrations.CreateModel(
            name='Spot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Spotname')),
                ('lat', models.CharField(default='51.347127', max_length=30, verbose_name='Latitude')),
                ('long', models.CharField(default='12.350504', max_length=30, verbose_name='Longitude')),
                ('description', models.TextField(default='Lorem Ipsum', verbose_name='Beschreibung, Zusatzinformation')),
                ('picture', models.ImageField(default='spot_placeholder.jpg', upload_to='spot_pics/', verbose_name='Foto vom Spot')),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainer_telnr', models.CharField(default='Hier die Nummer für die Website', max_length=100, verbose_name='Öffentliche Telefonnummer')),
                ('trainer_email', models.CharField(default='Hier die Email für die Website', max_length=150, verbose_name='Öffentliche Email')),
                ('image', models.ImageField(upload_to='profile_pics/', verbose_name='Profilbild')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Hallentraining', max_length=50, verbose_name='Titel')),
                ('day', models.CharField(default='Mo', max_length=2, verbose_name='Tag')),
                ('day_key', models.IntegerField(default=1, verbose_name='Key')),
                ('start_time', models.TimeField(default='17:00', verbose_name='Beginn')),
                ('end_time', models.TimeField(default='19:00', verbose_name='Ende')),
                ('hinweis', models.CharField(blank=True, max_length=50, verbose_name='Hinweis')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='members.Group', verbose_name='Gruppe')),
                ('spot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.Spot', verbose_name='Spot')),
                ('trainer', models.ManyToManyField(blank=True, to='members.Trainer', verbose_name='Trainer')),
            ],
            options={
                'ordering': ['day_key'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_num', models.CharField(blank=True, max_length=30, verbose_name='Mitgliedsnummer')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.Group')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=150, verbose_name='Emailadresse')),
                ('telnr', models.CharField(max_length=150, verbose_name='Telefon (während der Veranstaltung)')),
                ('birthday', models.DateTimeField(verbose_name='Geburtstag')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='members.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='Titel')),
                ('message', models.TextField(default='Deine Nachricht hier', verbose_name='Hinweis')),
                ('date', models.DateTimeField(default=datetime.datetime(2020, 9, 4, 13, 19, 49, 60274))),
                ('display', models.CharField(blank=True, choices=[('sessions', 'Sessions'), ('events', 'Events')], max_length=20)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(to='members.Group', verbose_name='Für die Gruppen')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='allowed_groups',
            field=models.ManyToManyField(to='members.Group', verbose_name='Für die Gruppen'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Chairman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_telnr', models.CharField(default='Hier die Nummer für die Website', max_length=100, verbose_name='Öffentliche Telefonnummer')),
                ('public_email', models.CharField(default='Hier die Email für die Website', max_length=150, verbose_name='Öffentliche Email')),
                ('competences', models.TextField(verbose_name='Zuständigkeiten (mit Komma getrennt)')),
                ('image', models.ImageField(upload_to='profile_pics/', verbose_name='Profilbild')),
                ('show', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('member_site', 'Anzeige Mitglieder'), ('interested_site', 'Anzeige Interessierte'), ('event_site', 'Anzeige Veranstalter')], max_length=38)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
